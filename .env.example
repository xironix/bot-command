# ------------------------------
# Telegram Configuration
# ------------------------------

# API Credentials (Required - Get from https://my.telegram.org/apps)
TELEGRAM_API_ID=12345678
TELEGRAM_API_HASH=abcdef0123456789abcdef0123456789

# Bot Monitoring Settings
# List of bot usernames to specifically monitor (comma-separated, optional if MONITOR_ALL_BOTS=true)
# Note: The system primarily relies on bots added via the database. This env var acts as a fallback/initial list.
TELEGRAM_BOT_USERNAMES=some_bot_username,another_bot_username
# List of bot usernames to ignore (comma-separated, optional)
TELEGRAM_BOT_BLOCKLIST=goodbot1,legitimatebot2
# Monitor all bots the user account has access to? (default: false)
MONITOR_ALL_BOTS=false
# Enable specific pattern filtering for messages? (default: true)
FILTER_BY_PATTERNS=true

# Webhook settings for receiving bot updates
WEBHOOK_BASE_URL=https://your-domain.com
# If using a custom port other than 443, specify it in your webhook URL (e.g., https://your-domain.com:8443)

# User Session Authentication (Optional - Needed for non-interactive login)
# Used if the session file doesn't exist or is invalid
TELEGRAM_PHONE_NUMBER=+1234567890
TELEGRAM_SESSION_NAME=bot_monitor_session # Base name for session file (stored in sessions/)

# Media Handling
MEDIA_RETENTION_DAYS=30 # How many days to keep downloaded media (default: 30)
MAX_DISK_USAGE_GB=10 # Max disk space in GB for downloads before cleanup (default: 10)

# ------------------------------
# Database Configuration
# ------------------------------

# MongoDB (Required)
MONGO_USERNAME=admin
MONGO_PASSWORD=yourStrongMongoPassword
MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongodb:27017/ # Default assumes Docker service name 'mongodb'

# ------------------------------
# Elasticsearch / Kibana Configuration
# ------------------------------

# Elasticsearch (Required)
ELASTICSEARCH_URI=https://elasticsearch:9200 # Default assumes Docker service name 'elasticsearch'
ELASTICSEARCH_USERNAME=elastic # Optional, used for basic auth
ELASTICSEARCH_PASSWORD=yourStrongElasticPassword # Optional, used for basic auth
# Verify Elasticsearch TLS certificate (default: true). Set to false for self-signed certs without a trusted CA.
ELASTICSEARCH_VERIFY_CERTS=true

# Kibana (Optional - For viewing data)
KIBANA_URI=http://localhost:5601 # Accessible URI for Kibana

# ------------------------------
# Application Settings
# ------------------------------
LOG_LEVEL=INFO # Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
DEBUG=false # Enable FastAPI debug mode (default: false)

# ------------------------------
# Docker Setup Variables
# ------------------------------
# This password is used specifically by the docker setup scripts if run, separate from ES basic auth.
ELASTIC_PASSWORD=yourStrongElasticPassword

# ==============================
# Notes:
# - Create a `.env` file by copying this example (`cp .env.example .env`).
# - These are example values only. Replace with your actual values in `.env`.
# - For production, use strong passwords and configure URIs appropriately.
# - The setup_docker.py script might generate secure passwords automatically.
# ============================== 